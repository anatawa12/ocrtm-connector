buildscript {
    ext.kotlin_version = '1.3.41'

    repositories {
        mavenCentral()
        jcenter()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
    }
    dependencies {
        classpath "net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath 'com.anatawa12:compile-time-constant:1.0.1'
    }
}

apply plugin: "net.minecraftforge.gradle.forge"
apply plugin: 'com.anatawa12.compile-time-constant'
apply plugin: 'kotlin'


version = modVersion
group = modGroup
archivesBaseName = modBaseName

minecraft {
    version = project.forgeVersion
    runDir = "run"

    // the mappings can be changed at any time, and must be in the following format.
    // snapshot_YYYYMMDD   snapshot are built nightly.
    // stable_#            stables are built at the discretion of the MCP team.
    // Use non-default mappings at your own risk. they may not always work.
    // simply re-run your setup task after changing the mappings to update your workspace.
    mappings = project.mcpVersion
    // makeObfSourceJar = false // an Srg named sources jar is made by default. uncomment this to disable.
}

configurations {
    shade
    compile.extendsFrom shade
}


repositories {
    mavenCentral()
    maven { url = "http://maven.cil.li/" }
}
dependencies {
    shade "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    shade "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    shade "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.2.2"
    compile "li.cil.oc:OpenComputers:MC1.12.2-1.7.2.71:api"
}

jar {
    configurations.shade.each { dep ->
        from(project.zipTree(dep)) {
            exclude 'META-INF', 'META-INF/**'
        }
    }
}


processResources {
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include "mcmod.info"

        // replace version and mcversion
        expand "version": project.version, "mcversion": project.minecraft.version
    }

    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude "mcmod.info"
    }
}

createCompileTimeConstant {
    constantsClass = "com.anatawa12.ocrtm.Constants"
    values version: modVersion.toString()
}

compileKotlin.dependsOn += createCompileTimeConstant

runClient {
//    systemProperties("legacy.debugClassLoading": true, "legacy.debugClassLoadingFiner": true, "legacy.debugClassLoadingSave": true)
}
